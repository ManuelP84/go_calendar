// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	events "github.com/ManuelP84/calendar/domain/task/events"
	mock "github.com/stretchr/testify/mock"
)

// TaskBus is an autogenerated mock type for the TaskBus type
type TaskBus struct {
	mock.Mock
}

// Publish provides a mock function with given fields: event
func (_m *TaskBus) Publish(event events.TaskEvent) error {
	ret := _m.Called(event)

	var r0 error
	if rf, ok := ret.Get(0).(func(events.TaskEvent) error); ok {
		r0 = rf(event)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewTaskBus interface {
	mock.TestingT
	Cleanup(func())
}

// NewTaskBus creates a new instance of TaskBus. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTaskBus(t mockConstructorTestingTNewTaskBus) *TaskBus {
	mock := &TaskBus{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
